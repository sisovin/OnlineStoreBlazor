@page "/product-list"

@layout InnerPageLayout

<div class="container-fluid p-0 mb-5">
    <Microsoft.AspNetCore.Components.Sections.SectionContent SectionName="PageName">
        Product List
    </Microsoft.AspNetCore.Components.Sections.SectionContent>
    <!-- Product List Start -->
    <div class="product-view">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-8">
                    <div class="row">
                        <!-- Area Search, Product Sort and Product Price Range Section -->
                        <div class="col-md-12">
                            <div class="product-view-top">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="product-search">
                                            <input type="email" value="Search">
                                            <button><i class="fa fa-search"></i></button>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="product-short">
                                            <div class="dropdown">
                                                <div class="dropdown-toggle" data-toggle="dropdown">Product short by</div>
                                                <div class="dropdown-menu dropdown-menu-right">
                                                    <a href="#" class="dropdown-item">Newest</a>
                                                    <a href="#" class="dropdown-item">Popular</a>
                                                    <a href="#" class="dropdown-item">Most sale</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="product-price-range">
                                            <div class="dropdown">
                                                <div class="dropdown-toggle" data-toggle="dropdown">Product price range</div>
                                                <div class="dropdown-menu dropdown-menu-right">
                                                    <a href="#" class="dropdown-item">$0 to $50</a>
                                                    <a href="#" class="dropdown-item">$51 to $100</a>
                                                    <a href="#" class="dropdown-item">$101 to $150</a>
                                                    <a href="#" class="dropdown-item">$151 to $200</a>
                                                    <a href="#" class="dropdown-item">$201 to $250</a>
                                                    <a href="#" class="dropdown-item">$251 to $300</a>
                                                    <a href="#" class="dropdown-item">$301 to $350</a>
                                                    <a href="#" class="dropdown-item">$351 to $400</a>
                                                    <a href="#" class="dropdown-item">$401 to $450</a>
                                                    <a href="#" class="dropdown-item">$451 to $500</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Area Search, Product Sort and Product Price Range Section End -->
                        <!-- Product List Section -->
                        @if (ProductService.FeaturedProducts is not null)
                        {
                            <!--Product Item Start-->
                            @for (int i = 0; i < ProductService.FeaturedProducts.Count(); i += 3)
                            {
                                @foreach (Product product in ProductService.FeaturedProducts.Skip(i).Take(3))
                                {
                                    <div class="col-md-4">
                                        <div class="product-item">
                                            <div class="product-title">
                                                <a href="/product-list/@product.Id">@product.Name</a>
                                                <div class="ratting">
                                                    <i class="fa fa-star"></i>
                                                    <i class="fa fa-star"></i>
                                                    <i class="fa fa-star"></i>
                                                    <i class="fa fa-star"></i>
                                                    <i class="fa fa-star"></i>
                                                </div>
                                            </div>
                                            <div class="product-image">
                                                <a href="/product-list/@product.Id">
                                                    @if (!string.IsNullOrEmpty(product.Base64Img))
                                                    {
                                                        <img src="@product.Base64Img" alt="@product.Name">
                                                    }
                                                    else if (product.Base64Img!.Count() > 0)
                                                    {
                                                        <img src="@product.Base64Img" alt="@product.Name">
                                                    }
                                                </a>
                                                <div class="product-action">
                                                    <a href="#"><i class="fa fa-cart-plus"></i></a>
                                                    <a href="#"><i class="fa fa-heart"></i></a>
                                                    <a href="#"><i class="fa fa-search"></i></a>
                                                </div>
                                            </div>
                                            <div class="product-price">
                                                <h3><span>$</span>@product.Price</h3>
                                                <a class="btn" href="/cart/@product.Id"><i class="fa fa-shopping-cart"></i>Buy Now</a>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            <!--Product Item End-->
                        }
                        else
                        {
                            <div class="alert alert-info">No Featured Products available.</div>
                        }
                    </div>
                    <!-- Product List Section End -->
                    <!-- Pagination Start -->
                    <div class="col-md-12">
                        <nav aria-label="Page navigation example">
                            <ul class="pagination justify-content-center">
                                <li class="page-item disabled">
                                    <a class="page-link" href="#" tabindex="-1">Previous</a>
                                </li>
                                <li class="page-item active"><a class="page-link" href="#">1</a></li>
                                <li class="page-item"><a class="page-link" href="#">2</a></li>
                                <li class="page-item"><a class="page-link" href="#">3</a></li>
                                <li class="page-item">
                                    <a class="page-link" href="#">Next</a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                    <!-- Pagination Start -->
                </div>
                <!-- Side Bar Start -->
                <SideBarProductPage />
                <!-- Side Bar End -->
            </div>
            <!-- Recent Products -->
            <RecentProductPage />
            <!-- Recent Products End -->
        </div>
    </div>
    <!-- Product List End -->
</div>
<!-- Featured Product End -->
<MessageDialog @ref="messageDialogService.messageDialog"></MessageDialog>


@code {
    List<Product>? ProductLists = new();
    protected override async Task OnInitializedAsync()
    {
        bool featured = true;
        await ClientServices.GetAllProducts(featured);
        ClientServices.ProductAction += StateHasChanged;
        messageDialogService.Action += StateHasChanged;
    }

    private async Task RetrieveFeaturedProducts()
    {
        ProductLists?.Clear();
        bool featured = true;
        await ClientServices.GetAllProducts(featured);
        ProductLists = ClientServices.FeaturedProducts;
    }

    string GetNewLabel(DateTime dataUpload)
    {
        int maxDays = 30;
        int productDateAfterUploaded = (DateTime.Now - dataUpload).Days;
        return productDateAfterUploaded <= maxDays ? "New" : null!;
    }

    void ViewProduct(Product product)
    {
        NavigationManager.NavigateTo($"/product-list/{product.Id}");
    }

    private void DisplayResponse(ServiceResponse serviceResponse)
    {
        if (serviceResponse.Flag)
            messageDialogService.messageDialog!.SetDialogValues("Success", serviceResponse.Message);
        else
            messageDialogService.messageDialog!.SetDialogValues("Warning", serviceResponse.Message);

        messageDialogService.SetMessageDialog();

    }

    public void Dispose()
    {
        ClientServices.ProductAction -= StateHasChanged;
        messageDialogService.Action -= StateHasChanged;
    }
}

